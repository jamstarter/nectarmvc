<br>
<a href="/docs">Back to Docs</a>


<h1>Generating a Module with the CLI</h1>
You can generate a skeleton module by running the following command, replace "myModule" with the name of your new module.<br>
<xmp class='cli'>> ./cli generateModule myModule</xmp>
<br>
You will be presented with the results and given a URI to use to view the first view of your module in your browser.<br>
<xmp class='cli'>> ./cli generateModule myModule


Generating Module mymodule... 

Creating Directory... 
Creating Controller... 
Creating Model... 
Creating View... 
Creating Routes... 
Creating Folder for Database Maps... 
mymodule created in /var/www/framework/app/modules/mymodule 
Complete.

Navigate to /mymodule/index to view your new module!</xmp>
<br>

<h2>Creating New CLI Scripts</h2>
Use the testCLI.php file as a template to create new scripts. The $commands array sets what is displayed in the CLI menu and the function is what runs when a cli command is executed.<br>
<xmp class='cli'><?php
$commands[] = array('command'=>'testCLI','description'=>'Test the CLI');

function testCLI(){
  echo "\n\n CLI WORKS!!! \n\n";

}</xmp>
<br>
You can optionally pass a variable into the funciton as well:
<xmp class='cli'><?php
$commands[] = array('command'=>'testCLI','description'=>'Test the CLI');

function testCLI($myVar){
  echo "\n\n $myVar \n\n";

}</xmp><br>
Then run the command in the CLI:
<xmp class='cli'>./cli testCLI hello</xmp>
<br> Will output:
<xmp class='cli'>
hello

</xmp>
<br>